library(nnet)
library(caret)
# Load in the cleaned data sets
load("Data/train_clean.RData")  # 891 obs
load("Data/test_clean.RData")   # 418 obs
###
### Create neural network model
###
## Make vectors because neuralnet is weird
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
#vectors.test$survived.test <- factor(vectors.test$survived)
# Create neural network based on PCLASS, SEX, and FARE
#net <- neuralnet(survived ~ sex + pclass + fare + age, data = vectors,
#                 hidden = 2, err.fct="ce")
#net2 <- neuralnet(survived ~ sex + pclass + fare + age, data = vectors,
#                 hidden = 7, err.fct="ce", linear.output = FALSE)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
#net4 <- nnet(survived ~ sex.name + pclass + fare + age, data = train, size = 2,
#             linout = FALSE, maxit = 10000)
## Get the result
#result <- compute(net, vectors.test)
#result2 <- compute(net2, vectors.test)
result3 <- predict(net3, test, type = "class")
#result4 <- predict(net4, test, type = "class")
## Since neuralnet is being a bitch, we round values
#result$net.result[which(result$net.result < 1.5)] <- 1
#result$net.result[which(result$net.result >= 1.5)] <- 2
#test$survived <- result$net.result
#test$survived[which(test$survived == 1)] <- 0
#test$survived[which(test$survived == 2)] <- 1
## Use result 3
test.net <- test
test.net$survived <- result3
## Use result 4
#test.net4 <- test
#test.net4$survived <- result4
###
### Saving our model and prediction as a new CSV
###
# save csv file for submission
write.csv(test, "Submissions/neuralnet-01.csv")
write.csv(test.net, "Submissions/neuralnet-02.csv")
#write.csv(test.net4, "Submissions/neuralnet-03.csv")
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
View(test.net)
load("D:/Downloads/Yakovlev/test_clean.RData")
load("D:/Downloads/Yakovlev/train_clean.RData")
sex <- train$sex
View(train)
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
View(vectors)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
View(vectors.test)
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
result3 <- predict(net3, test, type = "class")
View(test)
test.net <- test
test.net$survived <- result3
test.net <- as.data.frame(test.net)
View(test.net)
diff <- as.data.frame(test.net$survived - test$survived)
diff <- test.net$survived - test$survived
matched <- intersect(test.net$survived, test$survived)
all <- union(test.net$survived, test$survived)
non.matched <- all[!all %in% matched]
non.matched <- as.data.frame(non.matched)
View(non.matched)
plot.nnet(net3)
plot(mod1,nid=F)
plot(net3,nid=F)
plot(net3)
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$Survived)
print(1-error)
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
## Make vectors because neuralnet is weird
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
## Make vectors because neuralnet is weird
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
## Make vectors because neuralnet is weird
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
## Make vectors because neuralnet is weird
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
## Make vectors because neuralnet is weird
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
load("D:/R_projects/Final_Lab/test_clean.RData")
## Make vectors because neuralnet is weird
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
library(nnet)
## Make vectors because neuralnet is weird
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
library(nnet)
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
load("D:/R_projects/Final_Lab/train_clean.RData")
View(test)
load("D:/R_projects/Final_Lab/train_clean.RData")
load("D:/R_projects/Final_Lab/test_clean.RData")
library(nnet)
load("D:/R_projects/Final_Lab/train_clean.RData");
load("D:/R_projects/Final_Lab/test_clean.RData");
## Make vectors because neuralnet is weird
sex <- train$sex
pclass <- train$pclass
fare <- train$fare
age <- train$age
survived <- train$survived
vectors <- cbind(sex, pclass, fare, age, survived)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
#survived.test <- test$survived
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
plot(net3,test)
dim(net3)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
dim(net3)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 2,
linout = FALSE, maxit = 10000)
dim(net3)
dim(as.data.frame(net3))
length(as.array(net3))
length(as.array(test))
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 3,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 4,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
library(devtools)
installed.packages("devtools")
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
library(devtools)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
install.packages("devtools", dependencies = TRUE)
library(devtools)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
plot.nnet(net3)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 10,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
library(devtools)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
plot.nnet(net3)
View(vectors)
View(train)
vectors <- cbind(sex, pclass, fare, age, family, survived)
vectors <- cbind(sex, pclass, fare, age, family, survived)
vectors <- as.data.frame(vectors)
vectors$family <- factor(vectors$family)
vectors <- as.data.frame(vectors)
vectors$sex <- factor(vectors$sex)
vectors$pclass <- factor(vectors$pclass)
vectors$family <- factor(vectors$family)
vectors$survived <- factor(vectors$survived)
sex.test <- test$sex
pclass.test <- test$pclass
fare.test <- test$fare
age.test <- test$age
vectors.test <- cbind(sex.test, pclass.test, fare.test, age.test)
vectors.test <- as.data.frame(vectors.test)
colnames(vectors.test) <- c("sex", "pclass", "fare", "age")
vectors.test$sex.test <- factor(vectors.test$sex)
vectors.test$pclass.test <- factor(vectors.test$pclass)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 5,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
library(devtools)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
plot.nnet(net3)
net3 <- nnet(survived ~ sex + pclass + fare + age, data = train, size = 10,
linout = FALSE, maxit = 10000)
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
library(devtools)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
plot.nnet(net3)
net3 <- nnet(survived ~ sex + pclass + fare + age + family, data = train, size = 10,
linout = FALSE, maxit = 10000)
model <- "nnet(survived ~ sex + pclass + fare + age, data = train, size = 2, linout = FALSE, maxit = 10000)"
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
library(devtools)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
plot.nnet(net3)
net3 <- nnet(survived ~ sex + pclass + fare + age + family, data = train, size = 7,
linout = FALSE, maxit = 10000)
error <- mean(fitted.results != test$survived)
fitted.results <- predict(net3, test, type = "class")
fitted.results <- ifelse(fitted.results > 0.5, 1,0)
error <- mean(fitted.results != test$survived)
print(1-error)
library(devtools)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
plot.nnet(net3)
